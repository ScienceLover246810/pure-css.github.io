(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{134:function(e,t,n){"use strict";n.r(t);n(140);var a=n(0),o=n.n(a),l=n(141),r=n(142),u=n(146),s=n(143),c=n(147);t.default=function(){return o.a.createElement(l.a,{description:"Simple CSS for buttons.",title:"Buttons"},o.a.createElement(r.a,{description:"Simple CSS for buttons.",title:"Buttons"}),o.a.createElement("div",{className:"content",onClick:c.c},o.a.createElement(s.a,{heading:"Default Buttons"}),o.a.createElement("p",null,"To create a Pure Button, add the ",o.a.createElement("code",null,"pure-button")," classname to any ",o.a.createElement("code",null,"<a>")," or ",o.a.createElement("code",null,"<button>")," element."),o.a.createElement(u.a,null,o.a.createElement("a",{className:"pure-button",href:"#"},"A Pure Button"),o.a.createElement("button",{className:"pure-button"},"A Pure Button")),o.a.createElement(s.a,{heading:"Disabled Buttons"}),o.a.createElement("p",null,"To mark a button as disabled, add the ",o.a.createElement("code",null,"pure-button-disabled")," classname alongside ",o.a.createElement("code",null,"pure-button"),'. Alternatively, add the "disabled" attribute directly to your button.'),o.a.createElement(u.a,null,o.a.createElement("button",{className:"pure-button pure-button-disabled"},"A Disabled Button"),o.a.createElement("button",{className:"pure-button",disabled:!0},"A Disabled Button")),o.a.createElement(s.a,{heading:"Active Buttons"}),o.a.createElement("p",null,'To style a button so that it appears "pressed", add the ',o.a.createElement("code",null,"pure-button-active")," classname alongside ",o.a.createElement("code",null,"pure-button"),"."),o.a.createElement(u.a,null,o.a.createElement("a",{className:"pure-button pure-button-active",href:"#"},"An Active Button"),o.a.createElement("button",{className:"pure-button pure-button-active"},"An Active Button")),o.a.createElement(s.a,{heading:"Primary Buttons"}),o.a.createElement("p",null,"To indicate that a button represents a primary action, add the ",o.a.createElement("code",null,"pure-button-primary")," classname alongside ",o.a.createElement("code",null,"pure-button"),"."),o.a.createElement(u.a,null,o.a.createElement("a",{className:"pure-button pure-button-primary",href:"#"},"A Primary Button"),o.a.createElement("button",{className:"pure-button pure-button-primary"},"A Primary Button")),o.a.createElement(s.a,{heading:"Customizing Buttons"}),o.a.createElement("p",null,"Thanks to Pure's minimal styling, it is easy to build off of the generic Pure button and create customized buttons for your own application."),o.a.createElement("p",null,"To customize button styles, you should group your custom CSS into a class such as ",o.a.createElement("code",null,"button-foo"),", which you can then add to an element that already has the ",o.a.createElement("code",null,"pure-button")," classname. Here are some examples."),o.a.createElement("h3",{className:"content-subhead"},"Colored buttons with rounded corners"),o.a.createElement(u.a,null,o.a.createElement("div",null,o.a.createElement("style",{scoped:!0,dangerouslySetInnerHTML:{__html:"\n                     .button-success,\n                     .button-error,\n                     .button-warning,\n                     .button-secondary {\n                         color: white;\n                         border-radius: 4px;\n                         text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n                     }\n                     .button-success {\n                         background: rgb(28, 184, 65); /* this is a green */\n                     }\n                     .button-error {\n                         background: rgb(202, 60, 60); /* this is a maroon */\n                     }\n                     .button-warning {\n                         background: rgb(223, 117, 20); /* this is an orange */\n                     }\n                     .button-secondary {\n                         background: rgb(66, 184, 221); /* this is a light blue */\n                     }\n                    "}}),o.a.createElement("button",{className:"button-success pure-button"},"Success Button"),o.a.createElement("button",{className:"button-error pure-button"},"Error Button"),o.a.createElement("button",{className:"button-warning pure-button"},"Warning Button"),o.a.createElement("button",{className:"button-secondary pure-button"},"Secondary Button"))),o.a.createElement("h3",{className:"content-subhead"},"Buttons with different sizes"),o.a.createElement(u.a,null,o.a.createElement("div",null,o.a.createElement("style",{scoped:!0,dangerouslySetInnerHTML:{__html:"\n                     .button-xsmall {\n                         font-size: 70%;\n                     }\n                     .button-small {\n                         font-size: 85%;\n                     }\n                     .button-large {\n                         font-size: 110%;\n                     }\n                     .button-xlarge {\n                         font-size: 125%;\n                     }\n                  "}}),o.a.createElement("button",{className:"button-xsmall pure-button"},"Extra Small Button"),o.a.createElement("button",{className:"button-small pure-button"},"Small Button"),o.a.createElement("button",{className:"pure-button"},"Regular Button"),o.a.createElement("button",{className:"button-large pure-button"},"Large Button"),o.a.createElement("button",{className:"button-xlarge pure-button"},"Extra Large Button"))),o.a.createElement("h3",{className:"content-subhead"},"Buttons with icons"),o.a.createElement("p",null,"Pure doesn't ship with icon fonts, but we play nice with existing ones. Incorporating icon fonts with Pure Buttons is easy. In the example below, we're using icon fonts from ",o.a.createElement("a",{href:"http://fortawesome.github.io/Font-Awesome/"},"Font Awesome"),". Put the ",o.a.createElement("a",{href:"http://fortawesome.github.io/Font-Awesome/get-started/"},"Font Awesome CSS file")," on your page and use an ",o.a.createElement("code",null,"<i>")," element within a ",o.a.createElement("code",null,"pure-button")," element."),o.a.createElement(u.a,null,o.a.createElement("button",{className:"pure-button"},o.a.createElement("i",{className:"fa fa-cog"}),"Settings"),o.a.createElement("a",{className:"pure-button",href:"#"},o.a.createElement("i",{className:"fa fa-shopping-cart fa-lg"}),"Checkout")),o.a.createElement(s.a,{heading:"Button Groups"}),o.a.createElement("p",null,"Group multiple buttons together on a single line."),o.a.createElement("aside",null,o.a.createElement("p",null,"For assistive technologies (i.e, screen readers) a ",o.a.createElement("code",null,"role")," attribute should be provided to ensure that proper meaning is conveyed. Button groups should have a ",o.a.createElement("code",null,'role="group"'),", while toolbars should have ",o.a.createElement("code",null,'role="toolbar"'),"."),o.a.createElement("p",null,"Additionally, a clear label should be provided since most assistive technologies will not announce them. The code snippet below provides an example.")),o.a.createElement(u.a,null,o.a.createElement("div",{className:"pure-button-group",role:"group","aria-label":"..."},o.a.createElement("button",{className:"pure-button"},"A Pure Button"),o.a.createElement("button",{className:"pure-button"},"A Pure Button"),o.a.createElement("button",{className:"pure-button pure-button-active"},"A Pure Button")))))}},146:function(e,t,n){"use strict";var a=n(0),o=n.n(a),l=n(150),r=n.n(l),u=n(144),s=n(151);t.a=function(e){var t=e.children,n=Object(s.html)(r.a.renderToStaticMarkup(t),{inline:"b"});return o.a.createElement("div",{className:"example"},o.a.createElement("div",{dangerouslySetInnerHTML:{__html:n}}),o.a.createElement(u.a,null,n))}},147:function(e,t,n){"use strict";function a(e){var t=e.module,n=e.decimals,a=void 0===n?1:n;return(e.filesizes[t]/1024).toFixed(a)+"KB"}function o(e){var t=e.modules,n=e.module,a=e.filesizes,o=t.reduce((function(e,t){return e+a[t]}),0);return(a[n]/o*100).toFixed(4)+"%"}function l(e){e.preventDefault(),e.stopPropagation(),e.nativeEvent.stopImmediatePropagation()}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o})),n.d(t,"c",(function(){return l}))}}]);